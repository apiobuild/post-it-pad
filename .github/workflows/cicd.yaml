on:
  pull_request:
  push:
    branches: [develop]
  release:
    types: [published]
jobs:
  build_container:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    name: build docker container
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Docker Image Tag
        id: get_image_tag
        run: |
          REGISTRY=ghcr.io
          DOCKER_IMAGE=${REGISTRY}/apiobuild/post-it-pad
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS"
          fi
          echo ::set-output name=registry::${REGISTRY}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build image
        run: |
          docker build . --file Dockerfile --tag ${{ steps.get_image_tag.outputs.tags }} \
            --label "org.opencontainers.image.source=${{ github.event.repository.html_url }}" \
            --label "org.opencontainers.image.created=${{ steps.get_image_tag.outputs.created }}" \
            --label "org.opencontainers.image.revision=${{ github.sha }}"
